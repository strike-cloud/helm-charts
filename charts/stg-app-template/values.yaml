---
# Simplified values.yaml for stg-app-template
image: 317814227242.dkr.ecr.us-east-2.amazonaws.com
appVersion: latest
namespace: apps
envShort: stg
appName: app-template
imagePullPolicy: Always
# type: app | worker | cronjob
type: app
# Only needed for cronjob type
cronjob:
  schedule: "* * * * *"
healthcheck:
  type: http
  path: /
  readinessSuccess: 2
  readinessFailure: 2
  readinessDelay: 20
  livenessSuccess: 1
  livenessFailure: 2
  livenessDelay: 20
  period: 10
  timeout: 5
resources:
  requests:
    cpu: 1000m
    memory: 1024Mi
  limits:
    memory: 1024Mi
  volume:
    enabled: false
    size: 10Gi
    mountPath: /mnt/app-data
replicaCount: 1
deployment:
  maxUnavailable: 0
  maxSurge: 1
  strategy: RollingUpdate
  specs:
    labels:
      example: thislabel
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  cpu: 80
  memory:
  requests:
ingress:
  enabled: true
  scheme: internal
  target: ip
  sg: "sg_internal"
  domain: westrike.top
  group: "core"
  certificate: arn:aws:acm:us-east-2:317814227242:certificate/614d5719-349a-4933-acce-ddf7d4239ce8
  
  # Multiple ingress support - define multiple ingress rules for different ports
  # If not specified, creates a single ingress for the first service port
  rules:
    - name: main           # Primary ingress (optional name, defaults to appName)
      port: http           # Port name from service.ports to route to
      path: /              # Path for this ingress rule
      # host: custom.domain.com  # Optional: override default hostname
    
    # Example: Additional ingress for second port
    # - name: api
    #   port: grpc
    #   path: /api
    #   host: api.app-name.stg.westrike.top
service:
  enabled: true
  type: ClusterIP
  ports:
    - name: http
      port: 80          # External service port
      targetPort: 8080  # Container port (where your app listens)
      protocol: TCP
  
  # Add additional ports as needed:
  # ports:
  #   - name: http
  #     port: 80
  #     targetPort: 8080
  #     protocol: TCP
  #   - name: grpc
  #     port: 90
  #     targetPort: 9090
  #     protocol: TCP
  #   - name: metrics
  #     port: 3000
  #     targetPort: 3000
  #     protocol: TCP
secrets:
  enabled: false
environments:
  env: stg
configmap:
  enabled: false
  name: test-configmap